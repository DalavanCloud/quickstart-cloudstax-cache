{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates an AWS ECS cluster and the Redis Cluster Service in an existing VPC. The application runs on RedisAccessSecurityGroup and the same VPC to access Redis. License: Apache 2.0 (Please do not remove) Feb,19,2018 (qs-1o6j92eae)",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "AvailabilityZones",
            "NumberOfAZs",
            "VPCID",
            "PrivateSubnet1ID",
            "PrivateSubnet2ID",
            "PrivateSubnet3ID",
            "BastionSecurityGroupID",
            "LambdaSubnetCIDR"
          ]
        },
        {
          "Label": {
            "default": "Security Configuration"
          },
          "Parameters": [
            "KeyPairName"
          ]
        },
        {
          "Label": {
            "default": "FireCamp Cluster Configuration"
          },
          "Parameters": [
            "ClusterName",
            "FireCampRelease",
            "NodeAMIOS",
            "NumberOfNodes",
            "NodeInstanceType",
            "DeleteVolume"
          ]
        },
        {
          "Label": {
            "default": "AWS Quick Start Configuration"
          },
          "Parameters": [
            "QSS3BucketName",
            "QSS3KeyPrefix"
          ]
        },
        {
          "Label": {
            "default": "Redis Service Configuration"
          },
          "Parameters": [
            "RedisRelease",
            "ServiceName",
            "Shards",
            "ReplicasPerShard",
            "MemoryCacheSizeMB",
            "VolumeType",
            "Iops",
            "VolumeSizeGB",
            "DisableAOF",
            "AuthPass",
            "MaxMemoryPolicy",
            "ConfigCommandName"
          ]
        }
      ],
      "ParameterLabels": {
        "AvailabilityZones": {
          "default": "Availability Zones"
        },
        "NumberOfAZs": {
          "default": "Number of Availability Zones"
        },
        "VPCID": {
          "default": "VPC ID"
        },
        "PrivateSubnet1ID": {
          "default": "Private Subnet 1 ID"
        },
        "PrivateSubnet2ID": {
          "default": "Private Subnet 2 ID"
        },
        "PrivateSubnet3ID": {
          "default": "Private Subnet 3 ID"
        },
        "BastionSecurityGroupID": {
          "default": "Bastion Security Group ID"
        },
        "LambdaSubnetCIDR": {
          "default": "Lambda Subnet CIDR"
        },
        "KeyPairName": {
          "default": "Key Pair Name"
        },
        "ClusterName": {
          "default": "Cluster Name"
        },
        "FireCampRelease": {
          "default": "CloudStax FireCamp Release Version"
        },
        "NodeAMIOS": {
          "default": "Node AMI Type"
        },
        "NumberOfNodes": {
          "default": "Number of Container Worker Nodes"
        },
        "NodeInstanceType": {
          "default": "Node Instance Type"
        },
        "DeleteVolume": {
          "default": "Delete Redis EBS Volumes"
        },
        "QSS3BucketName": {
          "default": "Quick Start S3 Bucket Name"
        },
        "QSS3KeyPrefix": {
          "default": "Quick Start S3 Key Prefix"
        },
        "RedisRelease": {
          "default": "Redis Release Version"
        },
        "ServiceName": {
          "default": "Service Name"
        },
        "Shards": {
          "default": "Number of Redis Shards"
        },
        "ReplicasPerShard": {
          "default": "Number of Replicas Per Shard"
        },
        "MemoryCacheSizeMB": {
          "default": "Redis Node Memory Cache Size MB"
        },
        "VolumeType": {
          "default": "Redis Volume Type"
        },
        "Iops": {
          "default": "Redis Volume Iops"
        },
        "VolumeSizeGB": {
          "default": "Redis Volume Size GB"
        },
        "DisableAOF": {
          "default": "Disable Append Only File"
        },
        "AuthPass": {
          "default": "Redis AUTH Password"
        },
        "MaxMemoryPolicy": {
          "default": "Redis Eviction Policy"
        },
        "ConfigCommandName": {
          "default": "New Name of Redis CONFIG Command"
        }
      }
    }
  },
  "Parameters": {
    "AvailabilityZones": {
      "Type": "List<AWS::EC2::AvailabilityZone::Name>",
      "Description": "The Availability Zones for the Subnets. Please make sure the AvailabilityZones match the Subnets and less or equal to Number of Container Worker Nodes, or else the cluster will not work."
    },
    "NumberOfAZs": {
      "AllowedValues": [
        "1",
        "2",
        "3"
      ],
      "Description": "Number of Availability Zones to use in the VPC. This MUST match your selections in the list of Availability Zones parameter. Please use 3 AZs for the production system.",
      "Default": "3",
      "Type": "String"
    },
    "VPCID": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Select a VPC that allows instances to access the Internet."
    },
    "PrivateSubnet1ID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The first existing SubnetID in your VPC where you want to deploy node(s). Please make sure the Subnet is in the AvailabilityZones.",
    },
    "PrivateSubnet2ID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The second existing SubnetID in your VPC where you want to deploy node(s). Please make sure the Subnet is in the AvailabilityZones.",
    },
    "PrivateSubnet3ID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The third existing SubnetID in your VPC where you want to deploy node(s). Please make sure the Subnet is in the AvailabilityZones.",
    },
    "BastionSecurityGroupID": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The BastionSecurityGroup to SSH to the nodes."
    },
    "LambdaSubnetCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Type": "String",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
      "Description": "The Subnet CIDR to run the Redis creation Lambda function. MUST be in the form x.x.x.x/x"
    },
    "KeyPairName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the cluster nodes."
    },
    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "Default": "quickstart-reference",
      "Type": "String",
      "ConstraintDescription": "The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Description": "S3 bucket name for the Quick Start. The Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Default": "cloudstax/cache/latest/",
      "Type": "String"
    },
    "FireCampRelease": {
      "Type": "String",
      "Default": "0.9.5",
      "AllowedValues": [
        "0.9.5",
        "0.9.4"
      ],
      "Description": "The FireCamp release version. For the detail release notes, please refer to https://github.com/cloudstax/firecamp/releases."
    },
    "ClusterName": {
      "Type": "String",
      "Description": "Name of the ECS cluster. The cluster domain will be ClusterName-firecamp.com. Each label of the domain name can be up to 63 bytes long. The ClusterName can be up to 54 bytes.",
      "MinLength": "1",
      "MaxLength": "54",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Cluster name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "NodeAMIOS": {
      "AllowedValues": [
        "Amazon-Linux-HVM"
      ],
      "Default": "Amazon-Linux-HVM",
      "Description": "The Linux distribution for the AMI to be used for the service instances",
      "Type": "String"
    },
    "NumberOfNodes": {
      "Type": "Number",
      "Default": "6",
      "Description": "Number of Nodes. This MUST match the total number of Redis nodes, Shards * ReplicasPerShard."
    },
    "NodeInstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "r4.large",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.18xlarge"
      ],
      "ConstraintDescription": "Please choose a valid instance type."
    },
    "DeleteVolume": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether delete Redis EBS volumes when deleting the stack"
    },
    "RedisRelease": {
      "Type": "String",
      "Default": "4.0",
      "AllowedValues": [
        "4.0"
      ],
      "Description": "Redis Release Version. For the detail release notes, please refer to https://raw.githubusercontent.com/antirez/redis/4.0/00-RELEASENOTES."
    },
    "ServiceName": {
      "Type": "String",
      "Description": "The Redis Service Name. The service DNS name will be ServiceName-index.ClusterName-firecamp.com. Each label of the domain name can be up to 63 bytes long. Reserve 4 bytes for the index. The ClusterName can be up to 58 bytes.",
      "MinLength": "1",
      "MaxLength": "58",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9-]*",
      "ConstraintDescription": "Service name must start with a letter and can only contain letters, numbers, or hyphens."
    },
    "Shards": {
      "Type": "Number",
      "Default": "3",
      "Description": "Number of Redis shards"
    },
    "ReplicasPerShard": {
      "Type": "Number",
      "Default": "2",
      "Description": "Number of replicas per shard"
    },
    "MemoryCacheSizeMB": {
      "Type": "Number",
      "Default": "256",
      "Description": "The memory cache size of one Redis node"
    },
    "VolumeType": {
      "Type": "String",
      "Default": "gp2",
      "AllowedValues": [
        "gp2",
        "io1",
        "st1"
      ],
      "Description": "The Redis volume type"
    },
    "Iops": {
      "Type": "Number",
      "Default": 100,
      "Description": "The iops of the volume, valid for io1 type volume only."
    },
    "VolumeSizeGB": {
      "Type": "Number",
      "Default": "1",
      "Description": "The Redis volume size. If AOF is enabled, volume size should be 6x of memory cache size. If AOF is disabled, volume size could be 2x of memory cache size."
    },
    "DisableAOF": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enable/Disable Redis append only file"
    },
    "AuthPass": {
      "Type": "String",
      "Default": "",
      "NoEcho": "true",
      "MaxLength": "255",
      "Description": "Enter your Redis AUTH Password",
      "ConstraintDescription": "Input your Redis AUTH password"
    },
    "MaxMemoryPolicy": {
      "Type": "String",
      "Default": "allkeys-lru",
      "AllowedValues": [
        "noeviction",
        "volatile-lru",
        "allkeys-lru",
        "volatile-lfu",
        "allkeys-lfu",
        "volatile-random",
        "allkeys-random",
        "volatile-ttl"
      ],
      "Description": "Redis eviction policy when the memory limit is reached. For the detail eviction policies, please refer to https://redis.io/topics/lru-cache."
    },
    "ConfigCommandName": {
      "Type": "String",
      "Default": "",
      "Description": "The new name for Redis CONFIG command, empty name means disable the command",
      "MinLength": "0",
      "MaxLength": "255",
      "AllowedPattern": "[a-zA-Z]*",
      "ConstraintDescription": "ConfigCommandName must start with a letter and can only contain letters."
    }
  },
  "Conditions": {
    "1AZCondition": {
      "Fn::Equals": [
        {
          "Ref": "NumberOfAZs"
        },
        1
      ]
    },
    "2AZCondition": {
      "Fn::Equals": [
        {
          "Ref": "NumberOfAZs"
        },
        2
      ]
    },
    "GovCloudCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-gov-west-1"
      ]
    }
  },
  "Resources": {
    "RedisAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "Instances with access to the services in the cluster"
      }
    },
    "ServiceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "The access ports to the services in the cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": {
              "Ref": "BastionSecurityGroupID"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "SourceSecurityGroupId": {
              "Ref": "RedisAccessSecurityGroup"
            }
          }
        ]
      }
    },
    "InternalAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "GroupDescription": "The inter-server access ports in the cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "27040",
            "ToPort": "27040",
            "SourceSecurityGroupId": {
              "Ref": "ServiceSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "SourceSecurityGroupId": {
              "Ref": "ServiceSecurityGroup"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "16379",
            "ToPort": "16379",
            "SourceSecurityGroupId": {
              "Ref": "ServiceSecurityGroup"
            }
          }
        ]
      }
    },
    "FireCampStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-cloudstax-firecamp/templates/firecamp-common.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "ClusterName": {
            "Ref": "ClusterName"
          },
          "Release": {
            "Ref": "FireCampRelease"
          },
          "QSS3BucketName": {
            "Ref": "QSS3BucketName"
          },
          "QSS3KeyPrefix": {
            "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-cloudstax-firecamp/"
          },
          "ServiceSecurityGroupID": {
            "Ref": "ServiceSecurityGroup"
          },
          "InternalAccessSecurityGroupID": {
            "Ref": "InternalAccessSecurityGroup"
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "VPCID": {
            "Ref": "VPCID"
          },
          "SubnetIDs": {
            "Fn::If": [
              "1AZCondition",
              {
                "Fn::Join": [
                  ",",
                  [
                    {
                      "Ref": "PrivateSubnet1ID"
                    }
                  ]
                ]
              },
              {
                "Fn::If": [
                  "2AZCondition",
                  {
                    "Fn::Join": [
                      ",",
                      [
                        {
                          "Ref": "PrivateSubnet1ID"
                        },
                        {
                          "Ref": "PrivateSubnet2ID"
                        }
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      ",",
                      [
                        {
                          "Ref": "PrivateSubnet1ID"
                        },
                        {
                          "Ref": "PrivateSubnet2ID"
                        },
                        {
                          "Ref": "PrivateSubnet3ID"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "NumberOfNodes": {
            "Ref": "NumberOfNodes"
          },
          "NodeAMIOS": {
            "Ref": "NodeAMIOS"
          },
          "NodeInstanceType": {
            "Ref": "NodeInstanceType"
          }
        }
      }
    },
    "RedisStack": {
      "DependsOn": "FireCampStack",
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/cache-subnet.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "ServiceSecurityGroupID": {
            "Ref": "ServiceSecurityGroup"
          },
          "VPCID": {
            "Ref": "VPCID"
          },
          "SubnetIDs": {
            "Fn::If": [
              "1AZCondition",
              {
                "Fn::Join": [
                  ",",
                  [
                    {
                      "Ref": "PrivateSubnet1ID"
                    }
                  ]
                ]
              },
              {
                "Fn::If": [
                  "2AZCondition",
                  {
                    "Fn::Join": [
                      ",",
                      [
                        {
                          "Ref": "PrivateSubnet1ID"
                        },
                        {
                          "Ref": "PrivateSubnet2ID"
                        }
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      ",",
                      [
                        {
                          "Ref": "PrivateSubnet1ID"
                        },
                        {
                          "Ref": "PrivateSubnet2ID"
                        },
                        {
                          "Ref": "PrivateSubnet3ID"
                        }
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "LambdaSubnetCIDR": {
            "Ref": "LambdaSubnetCIDR"
          },
          "QSS3BucketName": {
            "Ref": "QSS3BucketName"
          },
          "QSS3KeyPrefix": {
            "Ref": "QSS3KeyPrefix"
          },
          "DeleteVolume": {
            "Ref": "DeleteVolume"
          },
          "ClusterName": {
            "Ref": "ClusterName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "Shards": {
            "Ref": "Shards"
          },
          "ReplicasPerShard": {
            "Ref": "ReplicasPerShard"
          },
          "MemoryCacheSizeMB": {
            "Ref": "MemoryCacheSizeMB"
          },
          "VolumeType": {
            "Ref": "VolumeType"
          },
          "Iops": {
            "Ref": "Iops"
          },
          "VolumeSizeGB": {
            "Ref": "VolumeSizeGB"
          },
          "DisableAOF": {
            "Ref": "DisableAOF"
          },
          "AuthPass": {
            "Ref": "AuthPass"
          },
          "MaxMemoryPolicy": {
            "Ref": "MaxMemoryPolicy"
          },
          "ConfigCommandName": {
            "Ref": "ConfigCommandName"
          }
        }
      }
    }
  },
  "Outputs": {
    "RedisAccessSecurityGroup": {
      "Value": {
        "Ref": "RedisAccessSecurityGroup"
      }
    }
  }
}
